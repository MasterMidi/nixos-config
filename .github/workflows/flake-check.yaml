name: Flake Check

on:
  # Run on pull requests to main branch
  pull_request:
    branches:
      - main
  # Run on pushes to the main branch
  push:
    branches:
      - main
  # Allow manual triggering from the GitHub UI
  workflow_dispatch:

jobs:
  flake-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3
        with:
          extra-conf: |
            experimental-features = nix-command flakes pipe-operators
      
      - name: Run flake check
        run: |
          set -o pipefail
          nix flake check --keep-going --quiet --log-format internal-json 2>&1 | sed -u 's/^@nix //' | tee build-log.jsonl
      
      - name: Upload build log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-log
          path: build-log.jsonl
          retention-days: 30
      
      - name: Parse build log and create issue body
        if: always()
        id: parse-log
        run: |
          # Use nix shell to provide jq
          ISSUE_BODY=$(nix shell nixpkgs#jq -c jq -r '
            select(.level <= 1 and .action == "msg") | 
            "\(.level)|\(.msg)"
          ' build-log.jsonl | sort -u)
          
          if [ -z "$ISSUE_BODY" ]; then
            echo "has_issues=false" >> $GITHUB_OUTPUT
            echo "No errors or warnings found"
            exit 0
          fi
          
          echo "has_issues=true" >> $GITHUB_OUTPUT
          
          # Create issue body with all errors and warnings
          cat > issue-body.md << 'EOF'
          ## Build Errors and Warnings
          
          This issue was automatically created from the flake check build log.
          
          **Important for @copilot**: Please make all code changes to the base branch of the flake.lock update PR, not directly to any automated PR.
          
          ### Issues Found:
          
          EOF
          
          ERROR_COUNT=0
          WARNING_COUNT=0
          
          while IFS='|' read -r level msg; do
            if [ "$level" -eq 0 ]; then
              ERROR_COUNT=$((ERROR_COUNT + 1))
              echo "#### Error $ERROR_COUNT" >> issue-body.md
              echo "" >> issue-body.md
              echo '```' >> issue-body.md
              echo "$msg" >> issue-body.md
              echo '```' >> issue-body.md
              echo "" >> issue-body.md
            else
              WARNING_COUNT=$((WARNING_COUNT + 1))
              echo "#### Warning $WARNING_COUNT" >> issue-body.md
              echo "" >> issue-body.md
              echo '```' >> issue-body.md
              echo "$msg" >> issue-body.md
              echo '```' >> issue-body.md
              echo "" >> issue-body.md
            fi
          done <<< "$ISSUE_BODY"
          
          # Add summary at the beginning
          SUMMARY="**Summary**: $ERROR_COUNT error(s), $WARNING_COUNT warning(s)"
          sed -i "3i\\$SUMMARY\\n" issue-body.md
          
          echo "Found $ERROR_COUNT error(s) and $WARNING_COUNT warning(s)"
      
      - name: Create GitHub Issue
        if: always() && steps.parse-log.outputs.has_issues == 'true'
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "ðŸš¨ Build Errors and Warnings - ${{ github.ref_name }}"
          body: issue-body.md
          assignees: copilot
          labels: automated,build-issues
