name: Flake Check

on:
  # Run on pull requests to main branch
  pull_request:
    branches:
      - main
  # Run on pushes to the main branch
  push:
    branches:
      - main
  # Allow manual triggering from the GitHub UI
  workflow_dispatch:

jobs:
  flake-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3
        with:
          extra-conf: |
            experimental-features = nix-command flakes pipe-operators
      
      - name: Run flake check
        run: |
          set -o pipefail
          nix flake check --keep-going --quiet --log-format internal-json 2>&1 | sed -u 's/^@nix //' | tee build-log.jsonl
      
      - name: Upload build log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-log
          path: build-log.jsonl
          retention-days: 30
      
      - name: Parse build log and create issue templates
        if: always()
        run: |
          nix shell nixpkgs#jq -c bash scripts/create-issues-from-build-log.sh build-log.jsonl .github/ISSUE_TEMPLATES
      
      - name: Create issues from templates
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -d ".github/ISSUE_TEMPLATES" ] && [ "$(ls -A .github/ISSUE_TEMPLATES/*.md 2>/dev/null)" ]; then
            for issue_file in .github/ISSUE_TEMPLATES/*.md; do
              echo "Creating issue from: $issue_file"
              npx create-an-issue --filename="$issue_file"
            done
          else
            echo "No issue templates found"
          fi
