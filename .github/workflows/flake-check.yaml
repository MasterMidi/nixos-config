name: Flake Check

on:
  # Run on pull requests to main branch
  pull_request:
    branches:
      - main
  # Run on pushes to the main branch
  push:
    branches:
      - main
  # Allow manual triggering from the GitHub UI
  workflow_dispatch:

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3
        with:
          extra-conf: |
            experimental-features = nix-command flakes pipe-operators
      
      - name: Run flake check
        run: |
          set -o pipefail
          nix flake check --keep-going --quiet --log-format internal-json 2>&1 | sed -u 's/^@nix //' | tee build-log.jsonl
      
      - name: Upload build log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-log
          path: build-log.jsonl
          retention-days: 30

      - name: Parse build log warnings/errors
        if: always()
        run: |
          nix run nixpkgs#jq -- -s 'map(select(.level <= 2 and .action == "msg") | {level, msg: (.msg | gsub("\u001b\\[\\d*;*\\d*m"; ""))})' build-log.jsonl | tee results.json

      - name: Format report alerts
        if: always()
        id: format
        run: |
          jq -r '
            .[] |
            " > [!\(if .level == 1 then "WARNING" else "CAUTION" end)]\n> ```nix\n> \(.msg | gsub("\n"; "\n> "))\n> ```\n"
          ' results.json > report-body.md

      - name: Comment on PR
        if: always() && hashFiles('report-body.md') != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ -s report-body.md ]; then
            {
              echo "@copilot"
              echo "###  Nix Build Report 📝"
              echo ""
              cat report-body.md
            } > full-report.md
            gh pr comment $PR_NUMBER --body-file full-report.md
          fi
        
